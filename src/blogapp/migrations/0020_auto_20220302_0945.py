# Generated by Django 3.2 on 2022-03-02 09:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('configapp', '0070_alter_profile_cdn_dir'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blogapp', '0019_auto_20220302_0942'),
    ]

    operations = [
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='book',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.book'),
        ),
        migrations.AddField(
            model_name='post',
            name='categories',
            field=models.ManyToManyField(blank=True, to='blogapp.Category'),
        ),
        migrations.AddField(
            model_name='post',
            name='local_business',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.localbusiness'),
        ),
        migrations.AddField(
            model_name='post',
            name='movie',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.movie'),
        ),
        migrations.AddField(
            model_name='post',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Self-referencing field to nest menus.', null=True, on_delete=django.db.models.deletion.CASCADE, to='blogapp.post'),
        ),
        migrations.AddField(
            model_name='post',
            name='recipe',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.recipe'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, to='blogapp.Tag'),
        ),
        migrations.AddField(
            model_name='post',
            name='websites',
            field=models.ManyToManyField(blank=True, to='configapp.Website'),
        ),
    ]
