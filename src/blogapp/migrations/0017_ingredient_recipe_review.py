# Generated by Django 3.2 on 2022-01-22 10:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('blogapp', '0016_auto_20220121_2058'),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(blank=True, choices=[('BOOK', 'Book'), ('MOVI', 'Movie'), ('LOBU', 'Local Business'), ('REST', 'Restaurant')], max_length=4, verbose_name='Item Reviewed')),
                ('address_street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address')),
                ('address_city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('address_state', models.CharField(blank=True, help_text='state or province', max_length=100, verbose_name='State')),
                ('address_zipcode', models.CharField(blank=True, max_length=20, verbose_name='Zip Code')),
                ('address_country', models.CharField(choices=[('AT', 'Austria'), ('CZ', 'Czech Republic'), ('DE', 'Germany'), ('FR', 'France'), ('IT', 'Italy'), ('SK', 'Slovakia'), ('US', 'United States of America')], default='CZ', max_length=2, verbose_name='Country')),
                ('url_map', models.URLField(blank=True, help_text='Use google maps link.', max_length=100, verbose_name='Map Link to Business')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True, verbose_name='Longitude')),
                ('phone', models.CharField(blank=True, help_text='Including country code, only for businesses.', max_length=20, verbose_name='Phone Number')),
                ('isbn', models.CharField(blank=True, help_text='Required only for book reviews.', max_length=13, verbose_name='ISBN')),
                ('author_book', models.CharField(blank=True, help_text='Author of book.', max_length=100, null=True, verbose_name='Book Author')),
                ('author_book_url', models.URLField(blank=True, help_text='Website or wiki of Book Author.', max_length=100, verbose_name='Link to Book Author')),
                ('name', models.CharField(blank=True, help_text='Name of item reviewed: Book, Movie or Business.', max_length=50, verbose_name='Name')),
                ('url_item', models.URLField(blank=True, help_text='Website of item being reviewed.', max_length=100, verbose_name='Website of item being reviewed.')),
                ('url_review', models.URLField(blank=True, help_text='Link to page if there is a full review.', max_length=100, verbose_name='Website full review.')),
                ('language', models.CharField(choices=[('en-GB', 'English United Kingdom'), ('en-IE', 'English Ireland'), ('en-US', 'English United States'), ('cs-CZ', 'Czech Czech Republic'), ('de-DE', 'German Germany'), ('fr-FR', 'French France'), ('it-IT', 'Italian Italy'), ('sk-SK', 'Slovak Slovakia')], default='en-US', max_length=5, verbose_name='Language')),
                ('rating', models.CharField(blank=True, choices=[('1.0', '1.0 worst'), ('1.5', '1.5'), ('2.0', '2.0'), ('2.5', '2.5'), ('3.0', '3.0 average'), ('3.5', '3.5'), ('4.0', '4.0'), ('4.5', '4.5'), ('5.0', '5.0 best')], help_text='5 stars is best.', max_length=3, verbose_name='Rating')),
                ('cost', models.CharField(blank=True, choices=[('FREE', 'Free'), ('CHEA', 'Cheap'), ('MODE', 'Moderate'), ('EXPE', 'Expensive')], help_text='How expensive?', max_length=4, verbose_name='Cost')),
                ('restaurant_type', models.CharField(blank=True, choices=[('CASU', 'Casual Dining'), ('FINE', 'Fine Dining'), ('FAST', 'Fast Service')], max_length=4, verbose_name='Restaurant Type')),
                ('restaurant_cuisine', models.CharField(blank=True, help_text='Cuisine', max_length=100, verbose_name='Cuisine Offered.')),
                ('endorsement', models.CharField(blank=True, choices=[('NOREC', 'Not Recommended'), ('RECOM', 'Recommended')], help_text='Select Recommendation', max_length=5, verbose_name='Endorsement')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('post', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to='blogapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of dish.', max_length=100, verbose_name='Name')),
                ('prep_time', models.IntegerField(blank=True, help_text='Time in minutes. eg. 30', null=True, verbose_name='Prep Time')),
                ('cook_time', models.IntegerField(blank=True, help_text='Time in minutes. eg. 45', null=True, verbose_name='Cook Time')),
                ('instructions', models.TextField(blank=True, help_text='In a large bowl ...', verbose_name='Instructions')),
                ('recipe_yield_qnty', models.IntegerField(blank=True, help_text='eg. 25', null=True, verbose_name='Yield Qnty')),
                ('recipe_yield_description', models.CharField(blank=True, help_text='eg. cookies, loaf, servings', max_length=50, verbose_name='Yield Description')),
                ('recipe_yield_notes', models.CharField(blank=True, help_text='eg. Cookies approx. size 25 grams.', max_length=50, verbose_name='Yield Notes')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('post', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(blank=True, help_text='Weight in grams. eg. 50', null=True, verbose_name='Weight (grams)')),
                ('name', models.CharField(blank=True, help_text='ex. white onion, celery, pasta', max_length=100, verbose_name='Ingredient')),
                ('notes', models.CharField(blank=True, help_text='ex. finely chopped', max_length=200, verbose_name='Note')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.recipe')),
            ],
        ),
    ]
