# Generated by Django 3.2 on 2022-04-07 13:42

import ckeditor_uploader.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contactapp', '0003_auto_20220407_1318'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blogapp', '0004_auto_20220407_1318'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Article',
        ),
        migrations.DeleteModel(
            name='Doc',
        ),
        migrations.DeleteModel(
            name='Page',
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Is required, must be unique.', unique=True)),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('excerpt', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Max 200 characters.', max_length=200, null=True)),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PUBLI', 'Published'), ('DRAFT', 'Draft'), ('TRASH', 'Trash')], max_length=5, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, help_text='Moves post to front page.', verbose_name='Featured Post')),
                ('menu_order', models.IntegerField(default=0, help_text='Use to order menu', verbose_name='Menu Order')),
                ('is_primary', models.BooleanField(default=False, help_text='Use if in primary menu.')),
                ('is_secondary', models.BooleanField(default=False, help_text='Use if in secondary menu.')),
                ('is_tertiary', models.BooleanField(default=False, help_text='Use if in footer menu.')),
                ('date_published', models.DateField(default=datetime.date.today, verbose_name='Date Published')),
                ('date_modified', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Date Modified')),
                ('kwd_list', models.CharField(blank=True, help_text='Comma-separated list', max_length=200, verbose_name='Keyword List')),
                ('footer', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Use for footnotes, redactions and notes of changes or updates.', null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, to='blogapp.Category')),
                ('parent', models.ForeignKey(blank=True, help_text='Self-referencing field to nest menus.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blogapp.page')),
                ('tags', models.ManyToManyField(blank=True, to='blogapp.Tag')),
                ('websites', models.ManyToManyField(blank=True, to='contactapp.Website')),
            ],
            options={
                'verbose_name_plural': 'Pages',
                'ordering': ('-is_featured', '-date_published'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Is required, must be unique.', unique=True)),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('excerpt', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Max 200 characters.', max_length=200, null=True)),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PUBLI', 'Published'), ('DRAFT', 'Draft'), ('TRASH', 'Trash')], max_length=5, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, help_text='Moves post to front page.', verbose_name='Featured Post')),
                ('menu_order', models.IntegerField(default=0, help_text='Use to order menu', verbose_name='Menu Order')),
                ('is_primary', models.BooleanField(default=False, help_text='Use if in primary menu.')),
                ('is_secondary', models.BooleanField(default=False, help_text='Use if in secondary menu.')),
                ('is_tertiary', models.BooleanField(default=False, help_text='Use if in footer menu.')),
                ('date_published', models.DateField(default=datetime.date.today, verbose_name='Date Published')),
                ('date_modified', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Date Modified')),
                ('kwd_list', models.CharField(blank=True, help_text='Comma-separated list', max_length=200, verbose_name='Keyword List')),
                ('footer', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Use for footnotes, redactions and notes of changes or updates.', null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(blank=True, to='blogapp.Category')),
                ('parent', models.ForeignKey(blank=True, help_text='Self-referencing field to nest menus.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blogapp.doc')),
                ('tags', models.ManyToManyField(blank=True, to='blogapp.Tag')),
                ('websites', models.ManyToManyField(blank=True, to='contactapp.Website')),
            ],
            options={
                'verbose_name_plural': 'Documents',
                'ordering': ('-is_featured', '-date_published'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Is required, must be unique.', unique=True)),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('excerpt', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Max 200 characters.', max_length=200, null=True)),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PUBLI', 'Published'), ('DRAFT', 'Draft'), ('TRASH', 'Trash')], max_length=5, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, help_text='Moves post to front page.', verbose_name='Featured Post')),
                ('menu_order', models.IntegerField(default=0, help_text='Use to order menu', verbose_name='Menu Order')),
                ('is_primary', models.BooleanField(default=False, help_text='Use if in primary menu.')),
                ('is_secondary', models.BooleanField(default=False, help_text='Use if in secondary menu.')),
                ('is_tertiary', models.BooleanField(default=False, help_text='Use if in footer menu.')),
                ('date_published', models.DateField(default=datetime.date.today, verbose_name='Date Published')),
                ('date_modified', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Date Modified')),
                ('kwd_list', models.CharField(blank=True, help_text='Comma-separated list', max_length=200, verbose_name='Keyword List')),
                ('footer', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Use for footnotes, redactions and notes of changes or updates.', null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('book', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.book')),
                ('categories', models.ManyToManyField(blank=True, to='blogapp.Category')),
                ('local_business', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.localbusiness')),
                ('movie', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.movie')),
                ('parent', models.ForeignKey(blank=True, help_text='Self-referencing field to nest menus.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blogapp.article')),
                ('recipe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.recipe')),
                ('tags', models.ManyToManyField(blank=True, to='blogapp.Tag')),
                ('websites', models.ManyToManyField(blank=True, to='contactapp.Website')),
            ],
            options={
                'verbose_name_plural': 'Articles',
                'ordering': ('-is_featured', '-date_published'),
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='page',
            index=models.Index(fields=['status', 'date_published', 'is_featured'], name='blogapp_pag_status_a47347_idx'),
        ),
        migrations.AddIndex(
            model_name='doc',
            index=models.Index(fields=['status', 'date_published', 'is_featured'], name='blogapp_doc_status_3ba9a2_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'date_published', 'is_featured'], name='blogapp_art_status_3687a1_idx'),
        ),
    ]
