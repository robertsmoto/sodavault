# Generated by Django 3.2 on 2022-02-25 11:22

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('configapp', '0001_initial'),
        ('contactapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_min', models.IntegerField(default=0, help_text='Use to require minium order quantity.')),
                ('order_max', models.IntegerField(default=0, help_text='Use to limit order quantity.')),
                ('discount', models.IntegerField(default=0, help_text='Discount (5.0%) for purchase in collection.')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, help_text='How many components are included in the cost of 1 item.')),
            ],
        ),
        migrations.CreateModel(
            name='CostMultiplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiplier_type', models.CharField(blank=True, choices=[('FL', 'Flat Rate'), ('GM', 'Gross Margin'), ('MU', 'Markup')], max_length=4)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
            ],
            options={
                'ordering': ['multiplier_type', 'amount'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(blank=True, choices=[('COMP', 'Component'), ('PART', 'Part'), ('PROD', 'Product')], max_length=4)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, help_text='For internal and purchasing use.', max_length=200)),
                ('keywords', models.CharField(blank=True, help_text='comma, separated, list', max_length=200)),
                ('cost', models.BigIntegerField(default=0)),
                ('cost_shipping', models.BigIntegerField(default=0)),
                ('cost_quantity', models.IntegerField(default=1)),
                ('unit_base', models.IntegerField(default=1, help_text='eg. 100 if inventory = 120 cm, display = 1.2 meters')),
                ('price', models.BigIntegerField(blank=True, null=True)),
                ('collections', models.ManyToManyField(blank=True, related_name='_itemsapp_item_collections_+', through='itemsapp.CollectionJoin', to='itemsapp.Item')),
                ('components', models.ManyToManyField(blank=True, related_name='_itemsapp_item_components_+', through='itemsapp.ComponentJoin', to='itemsapp.Item')),
                ('cost_multiplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itemsapp.costmultiplier')),
            ],
        ),
        migrations.CreateModel(
            name='UnitDisplay',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('configapp.unit',),
        ),
        migrations.CreateModel(
            name='UnitInventory',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('configapp.unit',),
        ),
        migrations.CreateModel(
            name='DigitalProduct',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='itemsapp.item')),
                ('test_field', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Digital Products',
            },
            bases=('itemsapp.item',),
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField()),
                ('begins', models.DateField(null=True)),
                ('ends', models.DateField(null=True)),
                ('percentage', models.DecimalField(decimal_places=2, help_text='Percentage discount eg. 25% off', max_digits=4, null=True)),
                ('fixed', models.DecimalField(decimal_places=2, help_text='Fixed discount eg. $5.00 off', max_digits=8, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Fixed price eg. Sale Price $25.00', max_digits=8, null=True)),
                ('is_free_shipping', models.BooleanField(default=False)),
                ('bogx', models.PositiveSmallIntegerField(help_text='Buy One Get x Free', null=True)),
                ('items', models.ManyToManyField(related_name='promotions', to='itemsapp.Item')),
                ('promotion_override', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='overrides', to='itemsapp.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True, max_length=3000)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itemsapp.item')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('length', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('width', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('height', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('item', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='itemsapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='Marketing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_sm', ckeditor.fields.RichTextField(blank=True, help_text='500 characters max.', max_length=500, null=True)),
                ('description_md', ckeditor.fields.RichTextField(blank=True, help_text='1000 characters max.', max_length=1000, null=True)),
                ('description_lg', ckeditor.fields.RichTextField(blank=True, help_text='1000 characters max.', max_length=1000, null=True)),
                ('item', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='marketing_options', to='itemsapp.item')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='unit_display',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_display', to='itemsapp.unitdisplay'),
        ),
        migrations.AddField(
            model_name='item',
            name='unit_inventory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_inventory', to='itemsapp.unitinventory'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('order', models.IntegerField(blank=True, help_text='integer used to order images', null=True)),
                ('img_lg', imagekit.models.fields.ProcessedImageField(blank=True, help_text='converts to WebP format', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_md', imagekit.models.fields.ProcessedImageField(blank=True, help_text='converts to WebP format', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_sm', imagekit.models.fields.ProcessedImageField(blank=True, help_text='converts to WebP format', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x1_lg', imagekit.models.fields.ProcessedImageField(blank=True, help_text='1000px x 1000px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x1_md', imagekit.models.fields.ProcessedImageField(blank=True, help_text='500px x 500px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x1_sm', imagekit.models.fields.ProcessedImageField(blank=True, help_text='250px x 250px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_2x1_lg', imagekit.models.fields.ProcessedImageField(blank=True, help_text='1000px x 500px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_2x1_md', imagekit.models.fields.ProcessedImageField(blank=True, help_text='500px x 250px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_2x1_sm', imagekit.models.fields.ProcessedImageField(blank=True, help_text='250px x 125px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x2_lg', imagekit.models.fields.ProcessedImageField(blank=True, help_text='500px x 1000px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x2_md', imagekit.models.fields.ProcessedImageField(blank=True, help_text='250px x 500px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_1x2_sm', imagekit.models.fields.ProcessedImageField(blank=True, help_text='125px x 250px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_16x9', imagekit.models.fields.ProcessedImageField(blank=True, help_text='16:9 1200px x 675px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('img_191x1', imagekit.models.fields.ProcessedImageField(blank=True, help_text='1.91:1 1200px x 628px', null=True, upload_to='product_images/%Y/%m/%d')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='itemsapp.item')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid_i', models.BigIntegerField(blank=True, null=True)),
                ('pid_c', models.CharField(blank=True, max_length=100)),
                ('gtin', models.BigIntegerField(blank=True, null=True)),
                ('isbn', models.BigIntegerField(blank=True, null=True)),
                ('item', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='itemsapp.item')),
            ],
        ),
        migrations.AddField(
            model_name='componentjoin',
            name='from_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='components_from_item', to='itemsapp.item'),
        ),
        migrations.AddField(
            model_name='componentjoin',
            name='to_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='components_to_item', to='itemsapp.item'),
        ),
        migrations.AddField(
            model_name='collectionjoin',
            name='included_products',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections_incl_products', to='itemsapp.item'),
        ),
        migrations.AddField(
            model_name='collectionjoin',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collections_product', to='itemsapp.item'),
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_requested', models.DateField(blank=True, null=True)),
                ('date_submitted', models.DateField(blank=True, null=True)),
                ('cost', models.BigIntegerField(default=0)),
                ('cost_shipping', models.BigIntegerField(default=0)),
                ('cost_quantity', models.IntegerField(default=1, help_text='Divides total cost by this number to return ecpu.')),
                ('is_winning_bid', models.BooleanField(default=False)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contactapp.supplier')),
                ('unit_inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itemsapp.unitinventory')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_variation', models.BooleanField(default=False)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attr_join_items', to='itemsapp.item')),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('itemsapp.item',),
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('itemsapp.item',),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('itemsapp.item',),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['sku'], name='itemsapp_it_sku_27a3ad_idx'),
        ),
        migrations.AddField(
            model_name='bid',
            name='component',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bid_components', to='itemsapp.component'),
        ),
        migrations.AddField(
            model_name='bid',
            name='part',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bid_parts', to='itemsapp.part'),
        ),
        migrations.AddField(
            model_name='bid',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bid_products', to='itemsapp.product'),
        ),
    ]
